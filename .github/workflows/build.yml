name: Build & Test

on:
  issue_comment:
    types: [created]

env:
  BUILD_URL: '${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: 'Create E2E test check'
        uses: actions/github-script@v6
        id: create-check
        # https://docs.github.com/en/rest/checks/runs?apiVersion=2022-11-28#create-a-check-run
        with:
          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
          result-encoding: string
          script: |
            const { id } = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              head_sha: context.sha,
              name: "E2E Test ${{ matrix.shard }}/${{ strategy.job-total }}",
              status: "in_progress",
              details_url: process.env.BUILD_URL
            });
            return id;
      - name: Update Check
        uses: actions/github-script@v6
        if: ${{ always() }}
        with:
          debug: ${{ secrets.ACTIONS_STEP_DEBUG || false }}
          result-encoding: string
          script: |
            const { conclusion } = context;
            const conclusionMap = {
              success: "success",
              failure: "failure",
              cancelled: "cancelled",
              skipped: "neutral",
              timed_out: "timed_out",
              action_required: "action_required",
            };
            const checkConclusion = conclusionMap[conclusion] || "failure";
            await github.rest.checks.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              check_run_id: ${{ steps.create-check.outputs.result }},
              status: "completed",
              conclusion: checkConclusion,
              completed_at: new Date().toISOString(),
            });
